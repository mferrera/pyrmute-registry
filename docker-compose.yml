services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: registry
      POSTGRES_PASSWORD: registry
      POSTGRES_DB: pyrmute_registry
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U registry -d pyrmute_registry"]
      interval: 10s
      timeout: 5s
      retries: 5

  registry:
    build: .
    ports:
      - "8000:8000"
    environment:
      # Database
      PYRMUTE_REGISTRY_DATABASE_URL: postgresql://registry:registry@postgres:5432/pyrmute_registry
      PYRMUTE_REGISTRY_DATABASE_ECHO: "false"

      # Application
      PYRMUTE_REGISTRY_APP_NAME: "Pyrmute Schema Registry"
      PYRMUTE_REGISTRY_APP_VERSION: "1.0.0"
      PYRMUTE_REGISTRY_ENVIRONMENT: development

      # Authentication
      # Database-backed API keys - disabled by default for development
      # To enable: set ENABLE_AUTH=true and create API keys via CLI or API
      PYRMUTE_REGISTRY_ENABLE_AUTH: "false"

      # CORS
      PYRMUTE_REGISTRY_CORS_ALLOW_CREDENTIALS: "true"

      # Server
      PYRMUTE_REGISTRY_HOST: "0.0.0.0"
      PYRMUTE_REGISTRY_PORT: "8000"
      PYRMUTE_REGISTRY_WORKERS: "1"
      PYRMUTE_REGISTRY_RELOAD: "false"

      # Logging
      PYRMUTE_REGISTRY_LOG_LEVEL: "INFO"
      PYRMUTE_REGISTRY_DEBUG: "false"

      # Rate Limiting
      PYRMUTE_REGISTRY_RATE_LIMIT_ENABLED: "false"
      PYRMUTE_REGISTRY_RATE_LIMIT_PER_MINUTE: "60"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
